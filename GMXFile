namespace DeadCreator;

struct Vector2
{
   x : float;
   y : float;
}

struct Coord
{
   x : int;
   y : int;
}

struct Size
{
   width : int;
   height : int;
}

table ForceInfo
{
   name : string;
   is_ally : bool;
   is_vision : bool;
}

enum Approximation : int { AtLeast = 0, AtMost, Exactly }
enum Arithmetical : int { Add = 0, SetTo, Subtract }
enum TileType : int { Dirt = 0, Grass, Water, Hill }
enum SwitchStatus : int { Cleared = 0, Set }
enum SwitchStatus2 : int { Clear = 0, Set, Toggle, Randomize }
enum OrderType : int { Move = 0, Attack }
table TileInfo
{
   number : string;
   indices : Coord;
}

table Location
{
   name : string;
   size : Size;
   pos : Vector2;
}

table Always{}
table Never{}
table Command{}
table Bring
{
   player : int;
   approximation : Approximation;
   number : int;
   entity_type : int;
   location_name : string;
}
table CreateEntity
{
   number : int;
   entity_type : int;
   location_name : string;
   player : int;
}
table CountdownTimer
{
   approximation : Approximation;
   number : int;
}
table ElapsedTime
{
   approximation : Approximation;
   number : int;
}
table Switch
{
   info : SwitchInfo;
}

table DisplayText
{
   text : string;
}
table PlaySoundAtLocation
{
   file_name : string;
   location_name : string;
}
table PlaySound
{
   file_name : string;
}
table PreserveTrigger{}
table Victory{}
table Defeat{}
table MoveLocation
{
   dest_location_name : string;
   entity_type : int;
   player : int;
   source_location_name : string;
}
table MoveEntity
{
   numberAll : int;
   entity_type : int;
   player : int;
   src_location_name : string;
   dest_location_name : string;
}
table KillEntityAtLocation
{
   numberAll : int;
   entity_type : int;
   player : int;
   location_name : string;
}
table PauseGame{}
table ResumeGame{}
table SetAllianceStatus
{
   player : int;
   is_ally : bool;
}
table SetCountdownTimer
{
   arithmetical : Arithmetical;
   number : int;
}
table SetSwitch
{
   info : SwitchInfo2;
}
table Order
{
   entity_type : int;
   player : int;
   src_location_name : string;
   order : OrderType;
   dest_location_name : string;
}

union ConditionBase 
{
   Always,
   Never,
   Command,
   CountdownTimer,
   Bring,
   ElapsedTime,
   Switch
}

union ActionBase 
{ 
   CreateEntity,
   DisplayText,
   PreserveTrigger,
   KillEntityAtLocation,
   MoveLocation,
   PlaySoundAtLocation,
   PlaySound,
   Victory,
   Defeat,
   MoveEntity,
   PauseGame,
   ResumeGame,
   SetAllianceStatus,
   SetCountdownTimer,
   SetSwitch,
   Order
}

table Condition 
{
   condition : ConditionBase;
}

table Action
{
  action : ActionBase;
}

table Trigger
{
   players : [int];
   conditions : [Condition];
   actions: [Action];
}

table Entity
{
   id : int;
   player_type : int;
   entity_type : int;
   pos : Vector2;
   name : string;
}

table Polygon
{
   vertices : [Vector2];
}

table PlayerInfo
{
   player : int;
   force : int;
   owner : int;
}
table SwitchInfo
{
   name : string;
   status : SwitchStatus;
   index : int;
}
table SwitchInfo2
{
   name : string;
   status : SwitchStatus2;
   index : int;
}

table GMXFile
{
   default_type : TileType;
   tiles : [TileInfo];
   number_of_tiles : Coord;
   tile_size : Size;
   collision_regions : [Polygon];
   simple_collision_regions : [Polygon];
   entities : [Entity];
   cell_space_size : Size;
   locations : [Location];
   switch_infos : [SwitchInfo];
   triggers : [Trigger];
   playerInfos : [PlayerInfo];
   force1_info : ForceInfo;
   force2_info : ForceInfo;
   force3_info : ForceInfo;
   force4_info : ForceInfo;
}

root_type GMXFile;




